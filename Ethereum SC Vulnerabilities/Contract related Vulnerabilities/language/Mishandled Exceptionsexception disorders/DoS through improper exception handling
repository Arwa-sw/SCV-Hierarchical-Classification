Sample code: code13a, A code snippet of a real contract which does not check the return value after calling other contracts. Code13b, DAO contract
contract KingOfTheEtherThrone {
 struct Monarch {
 // address of the king .
 address ethAddr ;
 string name ;
 // how much he pays to previous king
 uint claimPrice ;
 uint coronationTimestamp ;
 }
 Monarch public currentMonarch ;
 // claim the throne
 function claimThrone ( string name ) {
 /.../
 if ( currentMonarch . ethAddr != wizardAddress )
 currentMonarch . ethAddr . send ( compensation );
 /.../
 // assign the new king
 currentMonarch = Monarch (
 msg. sender , name ,
 valuePaid , block . timestamp );
 }}
Source:  A code snippet of a real contract which does not check the return value after calling other contracts
function newContract(address _newContract){
        if (msg.sender != address(this) || !allowedRecipients[_newContract]) return;
        // move all ether
        if (!_newContract.call.value(address(this).balance)()) {
            throw;
        }
sorce : DAO contract